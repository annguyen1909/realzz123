{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Job\\\\JobStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateJob } from '../../redux/actions/jobAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobStatus = _ref => {\n  _s();\n\n  let {\n    job\n  } = _ref;\n  const {\n    auth\n  } = useSelector(state => state);\n  const dispatch = useDispatch(); // console.log(job._id)\n\n  const initialState = {\n    status: job.status\n  };\n  const [jobData, setJobData] = useState(initialState);\n  let statusMapping = {};\n\n  if (job.status === 'applied') {\n    statusMapping = {\n      name: \"Shortlist\",\n      statusCurr: \"shortlisted\",\n      button: \"btn-warning\"\n    };\n  }\n\n  if (job.status === 'shortlisted') {\n    statusMapping = {\n      name: \"Accept\",\n      statusCurr: \"accepted\",\n      button: \"btn-success\"\n    };\n  }\n\n  if (job.status === 'accepted') {\n    statusMapping = {\n      name: \"Accept\",\n      statusCurr: \"accepted\",\n      button: \"btn-success\"\n    };\n  }\n\n  useEffect(() => {}, []);\n\n  const isRejectDisable = () => {\n    if (jobData.status === 'accepted') return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 52\n    }, this);\n  };\n\n  const handleUpdateStatus = e => {\n    e.preventDefault();\n    dispatch(updateJob(jobData, job._id, auth.token));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card_status\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${statusMapping.button} `,\n        onClick: () => setJobData({ ...jobData,\n          status: `${statusMapping.statusCurr}`\n        }),\n        children: statusMapping.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: jobData.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger disabled\",\n        onClick: () => setJobData({ ...jobData,\n          status: \"rejected\"\n        }),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobStatus, \"jXER4pZqtSZEf8y1GoAN8R0LJfk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = JobStatus;\nexport default JobStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobStatus\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Job/JobStatus.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","updateJob","JobStatus","job","auth","state","dispatch","initialState","status","jobData","setJobData","statusMapping","name","statusCurr","button","isRejectDisable","handleUpdateStatus","e","preventDefault","_id","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,+BAA1B;;;AAEA,MAAMC,SAAS,GAAG,QAAW;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACzB,QAAM;AAACC,IAAAA;AAAD,MAASJ,WAAW,CAACK,KAAK,IAAIA,KAAV,CAA1B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFyB,CAIzB;;AAEA,QAAMQ,YAAY,GAAG;AAACC,IAAAA,MAAM,EAAEL,GAAG,CAACK;AAAb,GAArB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACS,YAAD,CAAtC;AAEA,MAAII,aAAa,GAAG,EAApB;;AAEA,MAAGR,GAAG,CAACK,MAAJ,KAAe,SAAlB,EAA4B;AACxBG,IAAAA,aAAa,GAAG;AAACC,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,UAAU,EAAE,aAAhC;AAA+CC,MAAAA,MAAM,EAAE;AAAvD,KAAhB;AACH;;AACD,MAAIX,GAAG,CAACK,MAAJ,KAAe,aAAnB,EAAiC;AAC7BG,IAAAA,aAAa,GAAG;AAACC,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,UAAU,EAAE,UAA7B;AAAyCC,MAAAA,MAAM,EAAE;AAAjD,KAAhB;AACH;;AAED,MAAIX,GAAG,CAACK,MAAJ,KAAe,UAAnB,EAA8B;AAC1BG,IAAAA,aAAa,GAAG;AAACC,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,UAAU,EAAE,UAA7B;AAAyCC,MAAAA,MAAM,EAAE;AAAjD,KAAhB;AACH;;AAIDjB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMkB,eAAe,GAAG,MAAM;AAC1B,QAAIN,OAAO,CAACD,MAAR,KAAmB,UAAvB,EAAoC,oBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACvC,GAFD;;AAGA,QAAMQ,kBAAkB,GAAIC,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,QAAQ,CAACL,SAAS,CAACQ,OAAD,EAAUN,GAAG,CAACgB,GAAd,EAAmBf,IAAI,CAACgB,KAAxB,CAAV,CAAR;AAEH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEJ,kBAAhB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAG,OAAML,aAAa,CAACG,MAAO,GAA/C;AACA,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaD,UAAAA,MAAM,EAAG,GAAEG,aAAa,CAACE,UAAW;AAAjD,SAAD,CADzB;AAAA,kBAIKF,aAAa,CAACC;AAJnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,kBAAIH,OAAO,CAACD;AAAZ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AACA,QAAA,OAAO,EAAE,MAAOE,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaD,UAAAA,MAAM,EAAE;AAArB,SAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAzDD;;GAAMN,S;UACaF,W,EACED,W;;;KAFfG,S;AA2DN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateJob } from '../../redux/actions/jobAction'\r\n\r\nconst JobStatus = ({job}) => {\r\n    const {auth} = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    // console.log(job._id)\r\n    \r\n    const initialState = {status: job.status}\r\n    \r\n    const [jobData, setJobData] = useState(initialState)\r\n    \r\n    let statusMapping = {}\r\n\r\n    if(job.status === 'applied'){\r\n        statusMapping = {name: \"Shortlist\", statusCurr: \"shortlisted\", button: \"btn-warning\"}\r\n    } \r\n    if (job.status === 'shortlisted'){\r\n        statusMapping = {name: \"Accept\", statusCurr: \"accepted\", button: \"btn-success\"}\r\n    }\r\n    \r\n    if (job.status === 'accepted'){\r\n        statusMapping = {name: \"Accept\", statusCurr: \"accepted\", button: \"btn-success\"}\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    const isRejectDisable = () => {\r\n        if (jobData.status === 'accepted')  return(<div></div>)\r\n    }\r\n    const handleUpdateStatus = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateJob(jobData, job._id, auth.token))\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"card_status\">\r\n            <form onSubmit={handleUpdateStatus}>\r\n                <button className={`btn ${statusMapping.button} `}\r\n                onClick={() => setJobData({...jobData, status: `${statusMapping.statusCurr}`})}\r\n                \r\n                >\r\n                    {statusMapping.name}\r\n                </button>\r\n                <p>{jobData.status}</p>\r\n                <button className=\"btn btn-danger disabled\" \r\n                onClick={() =>  setJobData({...jobData, status: \"rejected\"})}\r\n                >\r\n                    Reject\r\n                </button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobStatus"]},"metadata":{},"sourceType":"module"}