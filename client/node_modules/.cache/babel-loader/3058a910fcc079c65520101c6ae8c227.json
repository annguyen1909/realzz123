{"ast":null,"code":"import { GLOBALTYPES } from \"./globalTypes\";\nimport { imageUpload } from \"../../utils/imgUpload\";\nimport { postDataAPI } from \"../../utils/fetchData\";\nexport const POST_TYPES = {\n  // LOADING: 'LOADING',\n  CREATE_POST: 'CREATE_POST',\n  GET_POST: 'GET_POST'\n};\nexport const createPost = (data, images, auth) => async dispatch => {\n  // console.log({data, images}, auth)\n  let media = [];\n\n  try {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    if (images.length > 0) media = await imageUpload(images, auth.token);\n    const res = await postDataAPI('posts', {\n      data,\n      images: media\n    }, auth.token);\n    console.log({\n      data\n    }); // dispatch({ \n    //     type: POST_TYPES.CREATE_POST, \n    //     payload: {...res.data.newPost, user: auth.user} \n    // })\n\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: false\n      }\n    });\n    console.log(media);\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/redux/actions/postAction.js"],"names":["GLOBALTYPES","imageUpload","postDataAPI","POST_TYPES","CREATE_POST","GET_POST","createPost","data","images","auth","dispatch","media","type","ALERT","payload","loading","length","token","res","console","log","err","error","response","msg"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,OAAO,MAAMC,UAAU,GAAG;AACtB;AACAC,EAAAA,WAAW,EAAE,aAFS;AAGtBC,EAAAA,QAAQ,EAAE;AAHY,CAAnB;AAMP,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,KAAwB,MAAMC,QAAN,IAAmB;AACjE;AAEA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEZ,WAAW,CAACa,KAAnB;AAA0BC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAnC,KAAD,CAAR;AAEA,QAAGP,MAAM,CAACQ,MAAP,GAAgB,CAAnB,EAAsBL,KAAK,GAAG,MAAMV,WAAW,CAACO,MAAD,EAASC,IAAI,CAACQ,KAAd,CAAzB;AACtB,UAAMC,GAAG,GAAG,MAAMhB,WAAW,CAAC,OAAD,EAAU;AAAEK,MAAAA,IAAF;AAAQC,MAAAA,MAAM,EAAEG;AAAhB,KAAV,EAAkCF,IAAI,CAACQ,KAAvC,CAA7B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACb,MAAAA;AAAD,KAAZ,EALA,CAMA;AACA;AACA;AACA;;AAEAG,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,WAAW,CAACa,KAApB;AAA2BC,MAAAA,OAAO,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AAApC,KAAD,CAAR;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEH,GAfD,CAeE,OAAOU,GAAP,EAAY;AACVX,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,WAAW,CAACa,KADb;AAELC,MAAAA,OAAO,EAAG;AACNQ,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAahB,IAAb,CAAkBiB;AADnB;AAFL,KAAD,CAAR;AAMH;AACJ,CA3BM","sourcesContent":["import { GLOBALTYPES } from \"./globalTypes\"\r\nimport { imageUpload } from \"../../utils/imgUpload\"\r\nimport { postDataAPI } from \"../../utils/fetchData\"\r\n\r\n\r\nexport const POST_TYPES = {\r\n    // LOADING: 'LOADING',\r\n    CREATE_POST: 'CREATE_POST',\r\n    GET_POST: 'GET_POST'\r\n}\r\n\r\nexport const createPost = (data, images, auth) => async(dispatch) => {\r\n    // console.log({data, images}, auth)\r\n\r\n    let media = []\r\n    try {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: { loading: true }})\r\n\r\n        if(images.length > 0) media = await imageUpload(images, auth.token)\r\n        const res = await postDataAPI('posts', { data, images: media}, auth.token)\r\n        console.log({data})\r\n        // dispatch({ \r\n        //     type: POST_TYPES.CREATE_POST, \r\n        //     payload: {...res.data.newPost, user: auth.user} \r\n        // })\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: false} })\r\n\r\n        console.log(media)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT, \r\n            payload: ({\r\n                error: err.response.data.msg\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}