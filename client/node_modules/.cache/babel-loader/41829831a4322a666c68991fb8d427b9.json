{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Notify\\\\Notify.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loading from './Loading';\nimport Toast from './Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notify = () => {\n  _s();\n\n  const {\n    notify\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [notify.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 32\n    }, this), notify.error && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Error!\",\n        body: notify.error\n      },\n      handleShow: () => dispatch({\n        type: 'NOTIFY',\n        payload: {}\n      }),\n      bgColor: \"bg-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), notify.success && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Success!\",\n        body: notify.success\n      },\n      handleShow: () => dispatch({\n        type: 'NOTIFY',\n        payload: {}\n      }),\n      bgColor: \"bg-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notify, \"MMsDb9Zmes6B9ognxBx5uyYF6MI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Notify;\nexport default Notify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notify\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Notify/Notify.js"],"names":["React","useSelector","useDispatch","Loading","Toast","Notify","notify","state","dispatch","loading","error","title","body","type","payload","success"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAaL,WAAW,CAACM,KAAK,IAAIA,KAAV,CAA9B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,sBACI;AAAA,eAEKI,MAAM,CAACG,OAAP,iBAAkB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFvB,EAIKH,MAAM,CAACI,KAAP,iBACD,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAACC,QAAAA,KAAK,EAAE,QAAR;AAAkBC,QAAAA,IAAI,EAAEN,MAAM,CAACI;AAA/B,OAAZ;AACA,MAAA,UAAU,EAAE,MAAMF,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAD1B;AAEA,MAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YALJ,EASKR,MAAM,CAACS,OAAP,iBACD,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAACJ,QAAAA,KAAK,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEN,MAAM,CAACS;AAAjC,OAAZ;AACA,MAAA,UAAU,EAAE,MAAMP,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAD1B;AAEA,MAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnBD;;GAAMT,M;UACiBJ,W,EACFC,W;;;KAFfG,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Loading from './Loading'\r\nimport Toast from './Toast'\r\n\r\nconst Notify = () => {\r\n    const { notify } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div>\r\n            \r\n            {notify.loading && <Loading />}\r\n\r\n            {notify.error && \r\n            <Toast msg={{title: \"Error!\", body: notify.error}}\r\n            handleShow={() => dispatch({type: 'NOTIFY', payload: {}})}\r\n            bgColor=\"bg-danger\" />}\r\n\r\n            {notify.success && \r\n            <Toast msg={{title: \"Success!\", body: notify.success}}\r\n            handleShow={() => dispatch({type: 'NOTIFY', payload: {}})}\r\n            bgColor=\"bg-success\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notify"]},"metadata":{},"sourceType":"module"}