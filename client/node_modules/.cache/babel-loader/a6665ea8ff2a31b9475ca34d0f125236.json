{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst usePagination = (totalPages, page) => {\n  _s();\n\n  const {\n    firstArr,\n    lastArr\n  } = useMemo(() => {\n    const newArr = [...Array(totalPages)].map((_, i) => i + 1);\n    if (totalPages < 4) return {\n      firstArr: newArr,\n      lastArr: []\n    };\n\n    if (totalPages - page >= 4) {\n      return {\n        firstArr: newArr.slice(page - 1, page + 2),\n        lastArr: newArr.slice(totalPages - 1)\n      };\n    } else {\n      return {\n        firstArr: newArr.slice(totalPages - 4, totalPages),\n        lastArr: []\n      };\n    }\n  }, [totalPages, page]);\n  const navigate = useNavigate();\n\n  const isActive = index => {\n    if (index === page) return \"active\";\n    return \"\";\n  };\n\n  const prev = () => {\n    const newPage = Math.max(page - 1, 1);\n    navigate(`?page=${newPage}`);\n  };\n\n  const next = () => {\n    const newPage = Math.min(page + 1, totalPages);\n    navigate(`?page=${newPage}`);\n  };\n\n  const jump = num => {\n    navigate(`?page=${num}`);\n  };\n\n  return {\n    firstArr,\n    lastArr,\n    isActive,\n    prev,\n    next,\n    jump\n  };\n};\n\n_s(usePagination, \"CfEbs0po2bPNub7zvX1+w5Zw7I8=\", false, function () {\n  return [useNavigate];\n});\n\nexport default usePagination;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/hook/usePagination.jsx"],"names":["useMemo","useNavigate","usePagination","totalPages","page","firstArr","lastArr","newArr","Array","map","_","i","slice","navigate","isActive","index","prev","newPage","Math","max","next","min","jump","num"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,aAAa,GAAG,CAACC,UAAD,EAAcC,IAAd,KAAuB;AAAA;;AAGzC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBN,OAAO,CAAC,MAAM;AACtC,UAAMO,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACL,UAAD,CAAT,EAAuBM,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAAzC,CAAf;AACA,QAAIR,UAAU,GAAG,CAAjB,EACI,OAAO;AACHE,MAAAA,QAAQ,EAAEE,MADP;AACeD,MAAAA,OAAO,EAAE;AADxB,KAAP;;AAIJ,QAAGH,UAAU,GAAGC,IAAb,IAAqB,CAAxB,EAA2B;AACvB,aAAM;AACFC,QAAAA,QAAQ,EAAEE,MAAM,CAACK,KAAP,CAAaR,IAAI,GAAG,CAApB,EAAuBA,IAAI,GAAG,CAA9B,CADR;AAEFE,QAAAA,OAAO,EAAEC,MAAM,CAACK,KAAP,CAAaT,UAAU,GAAG,CAA1B;AAFP,OAAN;AAIH,KALD,MAKO;AACH,aAAO;AACHE,QAAAA,QAAQ,EAAEE,MAAM,CAACK,KAAP,CAAaT,UAAU,GAAG,CAA1B,EAA6BA,UAA7B,CADP;AAEHG,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH;AACJ,GAlBkC,EAkBhC,CAACH,UAAD,EAAaC,IAAb,CAlBgC,CAAnC;AAqBA,QAAMS,QAAQ,GAAGZ,WAAW,EAA5B;;AAGA,QAAMa,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAIA,KAAK,KAAKX,IAAd,EAAoB,OAAO,QAAP;AACpB,WAAO,EAAP;AACH,GAHD;;AAKA,QAAMY,IAAI,GAAI,MAAM;AAChB,UAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASf,IAAI,GAAG,CAAhB,EAAmB,CAAnB,CAAhB;AACAS,IAAAA,QAAQ,CAAE,SAAQI,OAAQ,EAAlB,CAAR;AACH,GAHD;;AAKA,QAAMG,IAAI,GAAG,MAAM;AACf,UAAMH,OAAO,GAAGC,IAAI,CAACG,GAAL,CAASjB,IAAI,GAAG,CAAhB,EAAmBD,UAAnB,CAAhB;AACAU,IAAAA,QAAQ,CAAE,SAAQI,OAAQ,EAAlB,CAAR;AACH,GAHD;;AAKA,QAAMK,IAAI,GAAIC,GAAD,IAAS;AAClBV,IAAAA,QAAQ,CAAE,SAAQU,GAAI,EAAd,CAAR;AACH,GAFD;;AAGA,SAAO;AAAClB,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBQ,IAAAA,QAApB;AAA8BE,IAAAA,IAA9B;AAAoCI,IAAAA,IAApC;AAA0CE,IAAAA;AAA1C,GAAP;AACH,CA9CD;;GAAMpB,a;UAwBeD,W;;;AAwBrB,eAAeC,aAAf","sourcesContent":["import { useMemo } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst usePagination = (totalPages,  page) => {\r\n\r\n  \r\n    const {firstArr, lastArr} = useMemo(() => {\r\n        const newArr = [...Array(totalPages)].map((_, i) => i + 1)\r\n        if (totalPages < 4) \r\n            return {\r\n                firstArr: newArr, lastArr: [] \r\n            }\r\n\r\n        if(totalPages - page >= 4) {\r\n            return{\r\n                firstArr: newArr.slice(page - 1, page + 2),\r\n                lastArr: newArr.slice(totalPages - 1)\r\n            }\r\n        } else {\r\n            return {\r\n                firstArr: newArr.slice(totalPages - 4, totalPages),\r\n                lastArr: []\r\n            }\r\n        }\r\n    }, [totalPages, page])\r\n\r\n\r\n    const navigate = useNavigate()\r\n    \r\n\r\n    const isActive = (index) => {\r\n        if (index === page) return \"active\"\r\n        return \"\"\r\n    }\r\n\r\n    const prev =  () => {\r\n        const newPage = Math.max(page - 1, 1)\r\n        navigate(`?page=${newPage}`)\r\n    }\r\n\r\n    const next = () => {\r\n        const newPage = Math.min(page + 1, totalPages)\r\n        navigate(`?page=${newPage}`)\r\n    }\r\n\r\n    const jump = (num) => {\r\n        navigate(`?page=${num}`)\r\n    }\r\n    return {firstArr, lastArr, isActive, prev, next, jump}\r\n}\r\n\r\nexport default usePagination"]},"metadata":{},"sourceType":"module"}