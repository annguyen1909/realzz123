{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Profile\\\\Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getProfileUsers } from '../../redux/actions/profileAction';\nimport Avatar from '../Avatar';\nimport StarRating from './StarRating';\nimport EditProfile from './EditProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Info = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    auth,\n    profile\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [userData, setUserData] = useState([]);\n  const [onEdit, setOnEdit] = useState(false);\n  useEffect(() => {\n    var _auth$user;\n\n    if (id === ((_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user._id)) {\n      setUserData([auth.user]);\n    } else {\n      dispatch(getProfileUsers({\n        users: profile.users,\n        id,\n        auth\n      }));\n      const newData = profile.users.filter(user => user._id === id);\n      setUserData(newData);\n    }\n  }, [id, auth, dispatch, profile.users]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info\",\n    children: userData.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info_container\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: user.avatar,\n          size: \"supper-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info_content_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), user._id === auth.user._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-info\",\n              onClick: () => setOnEdit(true),\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\" \", user.fullname, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"me-4\",\n              children: /*#__PURE__*/_jsxDEV(StarRating, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"me-4\",\n              children: [user.rating, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Address: \", user.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\" Email: \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", user.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Joined: \", user.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), onEdit && /*#__PURE__*/_jsxDEV(EditProfile, {\n          setOnEdit: setOnEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Info, \"UDIgqv4tVEAh3b/8QJGfYWDFFN0=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Profile/Info.js"],"names":["React","useState","useEffect","useParams","useSelector","useDispatch","getProfileUsers","Avatar","StarRating","EditProfile","Info","id","auth","profile","state","dispatch","userData","setUserData","onEdit","setOnEdit","user","_id","users","newData","filter","map","avatar","username","fullname","rating","address","email","description","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getProfileUsers } from '../../redux/actions/profileAction'\r\n\r\nimport Avatar from '../Avatar'\r\nimport StarRating from './StarRating'\r\n\r\nimport EditProfile from './EditProfile'\r\n\r\n\r\n\r\nconst Info = () => {\r\n  const { id } = useParams()\r\n  const { auth, profile } = useSelector(state => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const [userData, setUserData] = useState([])\r\n  const [onEdit, setOnEdit] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (id === auth.user?._id){\r\n        setUserData([auth.user])\r\n    } else {\r\n      dispatch(getProfileUsers({users: profile.users, id, auth}))\r\n      const newData = profile.users.filter(user => user._id === id)\r\n      setUserData(newData)\r\n    }\r\n  }, [id, auth, dispatch, profile.users])\r\n\r\n  return (\r\n    <div className=\"info\">\r\n      {\r\n        userData.map(user => {\r\n          return(\r\n            <div className=\"info_container\" key={user._id}>\r\n              <Avatar src={user.avatar} size=\"supper-avatar\" />\r\n              \r\n              <div className=\"info_content\"> \r\n                <div className=\"info_content_title\">\r\n                  <h2>{user.username}</h2>\r\n                  {\r\n                    user._id === auth.user._id ? \r\n                    <button className=\"btn btn-outline-info\"\r\n                    onClick={() => setOnEdit(true)}>\r\n                      Edit Profile\r\n                    </button>\r\n                    :\r\n                    <div />\r\n                  }\r\n                  \r\n                </div>\r\n\r\n                <h6> {user.fullname} </h6>\r\n                <div className=\"rating_btn\">\r\n                  <span className=\"me-4\"><StarRating /></span>\r\n                  <span className=\"me-4\">{user.rating} </span> \r\n                </div>\r\n\r\n                \r\n                <p> Address: {user.address}</p>\r\n                <h6> Email: {user.email}</h6>\r\n\r\n                <p>Description: {user.description}</p>\r\n                <p>Joined: {user.createdAt}</p>\r\n\r\n\r\n              </div>\r\n\r\n              {\r\n                onEdit && \r\n                <EditProfile \r\n                setOnEdit={setOnEdit}\r\n                />\r\n              }\r\n            </div>\r\n        )})\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info"]},"metadata":{},"sourceType":"module"}