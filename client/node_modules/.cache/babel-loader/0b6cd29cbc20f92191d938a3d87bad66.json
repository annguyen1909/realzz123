{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Browse\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    totalPages,\n    page,\n    setPage\n  } = _ref;\n  const {\n    firstArr,\n    lastArr\n  } = useMemo(() => {\n    const newArr = [...Array(totalPages)].map((_, i) => i + 1);\n    if (totalPages < 4) return {\n      firstArr: newArr,\n      lastArr: []\n    };\n\n    if (totalPages - page >= 4) {\n      return {\n        firstArr: newArr.slice(page - 1, page + 2),\n        lastArr: newArr.slice(totalPages - 1)\n      };\n    } else {\n      return {\n        firstArr: newArr.slice(totalPages - 4, totalPages),\n        lastArr: []\n      };\n    }\n  }, [totalPages, page]);\n\n  const isActive = index => {\n    if (index === page) return \"active\";\n    return \"\";\n  };\n\n  const prev = () => {\n    const newPage = Math.max(page - 1, 1);\n    setPage(newPage);\n  };\n\n  const next = () => {\n    const newPage = Math.min(page + 1, totalPages);\n    setPage(newPage);\n  };\n\n  const jump = num => {\n    setPage(num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prev,\n      children: \"\\xAB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), firstArr.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${isActive(num)}`,\n      onClick: () => jump(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)), lastArr.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this), lastArr.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${isActive(num)}`,\n      onClick: () => jump(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: next,\n      children: \"\\xBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}, \"NArEX3Mg/AqBO0bndl/ypfiHZ94=\")), \"NArEX3Mg/AqBO0bndl/ypfiHZ94=\");\n\n_c2 = Pagination;\nexport default Pagination;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pagination$React.memo\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Browse/Pagination.jsx"],"names":["React","useMemo","Pagination","memo","totalPages","page","setPage","firstArr","lastArr","newArr","Array","map","_","i","slice","isActive","index","prev","newPage","Math","max","next","min","jump","num","length"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\r\n\r\n\r\nconst Pagination = React.memo(({totalPages, page, setPage}) => {\r\n  const { firstArr, lastArr } = useMemo(() => {\r\n    const newArr = [...Array(totalPages)].map((_, i) => i + 1)\r\n\r\n    if(totalPages < 4)\r\n      return {\r\n        firstArr: newArr,\r\n        lastArr: []\r\n      }\r\n\r\n    if(totalPages - page >= 4){\r\n      return {\r\n        firstArr: newArr.slice(page - 1, page + 2),\r\n        lastArr: newArr.slice(totalPages - 1)\r\n      }\r\n    }else{\r\n      return {\r\n        firstArr: newArr.slice(totalPages - 4, totalPages),\r\n        lastArr: []\r\n      }\r\n    }\r\n  }, [totalPages, page])\r\n\r\n  \r\n\r\n  const isActive = (index) => {\r\n    if(index === page) return \"active\"\r\n    return \"\"\r\n  }\r\n\r\n  const prev = () => {\r\n    const newPage = Math.max(page - 1, 1)\r\n    setPage(newPage)\r\n  }\r\n\r\n  const next = () => {\r\n    const newPage = Math.min(page + 1, totalPages)\r\n    setPage(newPage)\r\n  }\r\n\r\n  const jump = (num) => {\r\n    setPage(num)\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n\r\n      <button onClick={prev}>&laquo;</button>\r\n      {\r\n        firstArr.map(num => (\r\n          <button key={num} className={`${isActive(num)}`}\r\n          onClick={() => jump(num)}>\r\n            {num}\r\n          </button>\r\n        ))\r\n      }\r\n\r\n      { lastArr.length > 0 && <button>...</button> }\r\n      \r\n      {\r\n        lastArr.map(num => (\r\n          <button key={num} className={`${isActive(num)}`}\r\n          onClick={() => jump(num)}>\r\n            {num}\r\n          </button>\r\n        ))\r\n      }\r\n\r\n      <button onClick={next}>&raquo;</button>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}