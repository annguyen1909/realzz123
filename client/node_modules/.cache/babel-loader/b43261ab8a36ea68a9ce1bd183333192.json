{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\pages\\\\auth\\\\reset_password.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from '../../redux/actions/authAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const token = new URLSearchParams(useLocation().search);\n  console.log(token);\n  const initialState = {\n    password: '',\n    cf_password: ''\n  };\n  const [userData, setUserData] = useState(initialState);\n  const {\n    password,\n    cf_password\n  } = userData;\n  const [typePass, setTypePass] = useState(false);\n  const [typeCfPass, setTypeCfPass] = useState(false);\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // dispatch(resetPassword(userData, {token}))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth_page fg_pass\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputPassword1\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pass\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: typePass ? \"text\" : \"password\",\n            className: \"form-control\",\n            id: \"exampleInputPassword1\",\n            name: \"password\",\n            onChange: handleChangeInput,\n            value: password,\n            style: {\n              background: `${alert.password ? \"#fd2d6a14\" : \"\"}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            onClick: () => setTypePass(!typePass),\n            children: typePass ? 'Hide' : 'Show'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: alert.password ? alert.password : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"retypePassword\",\n          className: \"form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pass\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: typeCfPass ? \"text\" : \"password\",\n            className: \"form-control\",\n            id: \"retypePassword\",\n            name: \"cf_password\",\n            onChange: handleChangeInput,\n            value: cf_password,\n            style: {\n              background: `${alert.cf_password ? \"#fd2d6a14\" : \"\"}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            onClick: () => setTypeCfPass(!typeCfPass),\n            children: typeCfPass ? 'Hide' : 'Show'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: alert.cf_password ? alert.cf_password : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100 mt-3\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"sCS7/yGPGqXgGZQsn6mGnQ/U5kg=\", false, function () {\n  return [useDispatch, useLocation];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/pages/auth/reset_password.jsx"],"names":["React","useState","useLocation","useDispatch","resetPassword","ResetPassword","dispatch","token","URLSearchParams","search","console","log","initialState","password","cf_password","userData","setUserData","typePass","setTypePass","typeCfPass","setTypeCfPass","handleChangeInput","e","name","value","target","handleSubmit","preventDefault","background","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { resetPassword } from '../../redux/actions/authAction'\r\n\r\n\r\n\r\n\r\nconst ResetPassword = () => {\r\n  const dispatch = useDispatch()\r\n  const token = new URLSearchParams(useLocation().search)\r\n\r\n  console.log(token)\r\n  const initialState = {password: '', cf_password: ''}\r\n  const [userData, setUserData] = useState(initialState)\r\n\r\n  const {  password, cf_password } = userData\r\n\r\n  const [typePass, setTypePass] = useState(false)\r\n  const [typeCfPass, setTypeCfPass] = useState(false)\r\n\r\n  const handleChangeInput = e => {\r\n    const {name, value} = e.target\r\n    setUserData({...userData, [name]: value})\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    // dispatch(resetPassword(userData, {token}))\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"auth_page fg_pass\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h4>Change Password</h4>\r\n\r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n            <div className=\"pass\">\r\n                <input type={typePass? \"text\" : \"password\"} \r\n                className=\"form-control\" id=\"exampleInputPassword1\" name=\"password\"\r\n                onChange={handleChangeInput} value={password} \r\n                style={{background: `${alert.password ? \"#fd2d6a14\" : \"\"}`}} />\r\n\r\n                <small onClick={() => setTypePass(!typePass)}>\r\n                    {typePass  ? 'Hide' : 'Show'}\r\n                </small>\r\n            </div>\r\n\r\n            <small className=\"form-text text-danger\">\r\n                {alert.password ? alert.password : \"\"}\r\n            </small>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n            <label htmlFor=\"retypePassword\" className=\"form-label\">Confirm Password</label>\r\n            <div className=\"pass\">\r\n                <input type={typeCfPass? \"text\" : \"password\"} \r\n                className=\"form-control\" id=\"retypePassword\" name=\"cf_password\"\r\n                onChange={handleChangeInput} value={cf_password} \r\n                style={{background: `${alert.cf_password ? \"#fd2d6a14\" : \"\"}`}} />\r\n                \r\n                <small onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                    {typeCfPass  ? 'Hide' : 'Show'}\r\n                </small>\r\n            </div>\r\n\r\n            <small className=\"form-text text-danger\">\r\n                {alert.cf_password ? alert.cf_password : \"\"}\r\n            </small>\r\n            \r\n            <button type=\"submit\" className=\"btn btn-primary w-100 mt-3\">Reset Password</button>\r\n        </div>\r\n\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}