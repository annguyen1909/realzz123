{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Browse\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    totalPages,\n    page\n  } = _ref;\n  const newArr = [...Array(totalPages)].map((_, i) => i + 1);\n  const navigate = useNavigate();\n\n  const isActive = index => {\n    if (index === page) return \"active\";\n    return \"\";\n  };\n\n  const prev = () => {\n    const newPage = Math.max(page - 1, 1);\n    navigate(`?page=${newPage}`);\n  };\n\n  const next = () => {\n    const newPage = Math.min(page + 1, totalPages);\n    navigate(`?page=${newPage}`);\n  };\n\n  const jump = num => {\n    navigate(`?page=${num}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prev,\n      children: \"\\xAB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), newArr.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${isActive(num)}`,\n      onClick: () => jump(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: next,\n      children: \"\\xBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Browse/Pagination.jsx"],"names":["React","useNavigate","Pagination","totalPages","page","newArr","Array","map","_","i","navigate","isActive","index","prev","newPage","Math","max","next","min","jump","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,UAAU,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAuB;AACzC,QAAMC,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACH,UAAD,CAAT,EAAuBI,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAAzC,CAAf;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAGA,KAAK,KAAKR,IAAb,EAAmB,OAAO,QAAP;AACnB,WAAO,EAAP;AACD,GAHD;;AAKA,QAAMS,IAAI,GAAG,MAAM;AACjB,UAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASZ,IAAI,GAAG,CAAhB,EAAmB,CAAnB,CAAhB;AACAM,IAAAA,QAAQ,CAAE,SAAQI,OAAQ,EAAlB,CAAR;AACD,GAHD;;AAKA,QAAMG,IAAI,GAAG,MAAM;AACjB,UAAMH,OAAO,GAAGC,IAAI,CAACG,GAAL,CAASd,IAAI,GAAG,CAAhB,EAAmBD,UAAnB,CAAhB;AACAO,IAAAA,QAAQ,CAAE,SAAQI,OAAQ,EAAlB,CAAR;AACD,GAHD;;AAKA,QAAMK,IAAI,GAAIC,GAAD,IAAS;AACpBV,IAAAA,QAAQ,CAAE,SAAQU,GAAI,EAAd,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIIR,MAAM,CAACE,GAAP,CAAWa,GAAG,iBACZ;AAAkB,MAAA,SAAS,EAAG,GAAET,QAAQ,CAACS,GAAD,CAAM,EAA9C;AACA,MAAA,OAAO,EAAE,MAAMD,IAAI,CAACC,GAAD,CADnB;AAAA,gBAEGA;AAFH,OAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ,eAYE;AAAQ,MAAA,OAAO,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvCD;;GAAMf,U;UAEaD,W;;;KAFbC,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Pagination = ({totalPages, page}) => {\r\n  const newArr = [...Array(totalPages)].map((_, i) => i + 1)\r\n  const navigate = useNavigate()\r\n\r\n  const isActive = (index) => {\r\n    if(index === page) return \"active\"\r\n    return \"\"\r\n  }\r\n\r\n  const prev = () => {\r\n    const newPage = Math.max(page - 1, 1)\r\n    navigate(`?page=${newPage}`)\r\n  }\r\n\r\n  const next = () => {\r\n    const newPage = Math.min(page + 1, totalPages)\r\n    navigate(`?page=${newPage}`)\r\n  }\r\n\r\n  const jump = (num) => {\r\n    navigate(`?page=${num}`)\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <button onClick={prev}>&laquo;</button>\r\n\r\n      {\r\n        newArr.map(num => (\r\n          <button key={num} className={`${isActive(num)}`}\r\n          onClick={() => jump(num)}>\r\n            {num}\r\n          </button>\r\n        ))\r\n      }\r\n\r\n      <button onClick={next}>&raquo;</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}