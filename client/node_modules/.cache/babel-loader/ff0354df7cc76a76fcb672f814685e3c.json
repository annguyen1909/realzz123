{"ast":null,"code":"import { GLOBALTYPES } from \"./globalTypes\";\nimport { imageUpload } from \"../../utils/imgUpload\";\nimport { postDataAPI } from \"../../utils/fetchData\";\nexport const POST_TYPES = {\n  // LOADING: 'LOADING',\n  CREATE_POST: 'CREATE_POST',\n  GET_POST: 'GET_POST'\n};\nexport const createPost = (data, images, auth) => async dispatch => {\n  console.log({\n    data\n  }, images, auth);\n  let media = [];\n\n  try {\n    // dispatch({type: GLOBALTYPES.ALERT, payload: { loading: true }})\n    // if(images.length > 0) media = await imageUpload(images, auth.token)\n    // const res = await postDataAPI('posts', data)\n    console.log(media);\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/redux/actions/postAction.js"],"names":["GLOBALTYPES","imageUpload","postDataAPI","POST_TYPES","CREATE_POST","GET_POST","createPost","data","images","auth","dispatch","console","log","media","err","type","ALERT","payload","error","response","msg"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,OAAO,MAAMC,UAAU,GAAG;AACtB;AACAC,EAAAA,WAAW,EAAE,aAFS;AAGtBC,EAAAA,QAAQ,EAAE;AAHY,CAAnB;AAMP,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,KAAwB,MAAMC,QAAN,IAAmB;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA;AAAD,GAAZ,EAAoBC,MAApB,EAA4BC,IAA5B;AAEA,MAAII,KAAK,GAAG,EAAZ;;AACA,MAAI;AACA;AAEA;AACA;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEf,WAAW,CAACgB,KADb;AAELC,MAAAA,OAAO,EAAG;AACNC,QAAAA,KAAK,EAAEJ,GAAG,CAACK,QAAJ,CAAaZ,IAAb,CAAkBa;AADnB;AAFL,KAAD,CAAR;AAMH;AACJ,CApBM","sourcesContent":["import { GLOBALTYPES } from \"./globalTypes\"\r\nimport { imageUpload } from \"../../utils/imgUpload\"\r\nimport { postDataAPI } from \"../../utils/fetchData\"\r\n\r\n\r\nexport const POST_TYPES = {\r\n    // LOADING: 'LOADING',\r\n    CREATE_POST: 'CREATE_POST',\r\n    GET_POST: 'GET_POST'\r\n}\r\n\r\nexport const createPost = (data, images, auth) => async(dispatch) => {\r\n    console.log({data}, images, auth)\r\n\r\n    let media = []\r\n    try {\r\n        // dispatch({type: GLOBALTYPES.ALERT, payload: { loading: true }})\r\n\r\n        // if(images.length > 0) media = await imageUpload(images, auth.token)\r\n        // const res = await postDataAPI('posts', data)\r\n\r\n        console.log(media)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT, \r\n            payload: ({\r\n                error: err.response.data.msg\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}