{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst usePagination = (totalPages, page) => {\n  _s();\n\n  const [firstArr, setFirstArr] = useState([]);\n  const [lastArr, setLastArr] = useState([]);\n  useEffect(() => {\n    const newArr = [...Array(totalPages)].map((_, i) => i + 1);\n    if (totalPages < 4) return setFirstArr(newArr);\n\n    if (totalPages - page >= 4) {\n      setFirstArr(newArr.slice(page - 1, page + 2));\n      setLastArr(newArr.slice(totalPages - 1));\n    } else {\n      setFirstArr(newArr.slice(totalPages - 4, totalPages));\n      setLastArr([]);\n    }\n  }, [totalPages, page]);\n  const navigate = useNavigate();\n\n  const isActive = index => {\n    if (index === page) return \"active\";\n    return \"\";\n  };\n\n  const prev = () => {\n    const newPage = Math.max(page - 1, 1);\n    navigate(`?page=${newPage}`);\n  };\n\n  const next = () => {\n    const newPage = Math.min(page + 1, totalPages);\n    navigate(`?page=${newPage}`);\n  };\n\n  const jump = num => {\n    navigate(`?page=${num}`);\n  };\n\n  return {\n    firstArr,\n    lastArr,\n    isActive,\n    prev,\n    next,\n    jump\n  };\n};\n\n_s(usePagination, \"kt6RRu1cMd1+wnMhWmOdLv8VUSU=\", false, function () {\n  return [useNavigate];\n});\n\nexport default usePagination;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/hook/usePagination.jsx"],"names":["useState","useEffect","useNavigate","usePagination","totalPages","page","firstArr","setFirstArr","lastArr","setLastArr","newArr","Array","map","_","i","slice","navigate","isActive","index","prev","newPage","Math","max","next","min","jump","num"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,aAAa,GAAG,CAACC,UAAD,EAAcC,IAAd,KAAuB;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACF,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACP,UAAD,CAAT,EAAuBQ,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAAzC,CAAf;AACA,QAAIV,UAAU,GAAG,CAAjB,EAAoB,OAAOG,WAAW,CAACG,MAAD,CAAlB;;AAEpB,QAAGN,UAAU,GAAGC,IAAb,IAAqB,CAAxB,EAA2B;AACzBE,MAAAA,WAAW,CAACG,MAAM,CAACK,KAAP,CAAaV,IAAI,GAAG,CAApB,EAAuBA,IAAI,GAAG,CAA9B,CAAD,CAAX;AACAI,MAAAA,UAAU,CAACC,MAAM,CAACK,KAAP,CAAaX,UAAU,GAAG,CAA1B,CAAD,CAAV;AACD,KAHD,MAGO;AACLG,MAAAA,WAAW,CAACG,MAAM,CAACK,KAAP,CAAaX,UAAU,GAAG,CAA1B,EAA6BA,UAA7B,CAAD,CAAX;AACAK,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAXQ,EAWN,CAACL,UAAD,EAAaC,IAAb,CAXM,CAAT;AAcA,QAAMW,QAAQ,GAAGd,WAAW,EAA5B;;AAGA,QAAMe,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIA,KAAK,KAAKb,IAAd,EAAoB,OAAO,QAAP;AACpB,WAAO,EAAP;AACD,GAHD;;AAKA,QAAMc,IAAI,GAAI,MAAM;AAClB,UAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASjB,IAAI,GAAG,CAAhB,EAAmB,CAAnB,CAAhB;AACAW,IAAAA,QAAQ,CAAE,SAAQI,OAAQ,EAAlB,CAAR;AACD,GAHD;;AAKA,QAAMG,IAAI,GAAG,MAAM;AACjB,UAAMH,OAAO,GAAGC,IAAI,CAACG,GAAL,CAASnB,IAAI,GAAG,CAAhB,EAAmBD,UAAnB,CAAhB;AACAY,IAAAA,QAAQ,CAAE,SAAQI,OAAQ,EAAlB,CAAR;AACD,GAHD;;AAKA,QAAMK,IAAI,GAAIC,GAAD,IAAS;AACpBV,IAAAA,QAAQ,CAAE,SAAQU,GAAI,EAAd,CAAR;AACD,GAFD;;AAGA,SAAO;AAACpB,IAAAA,QAAD;AAAWE,IAAAA,OAAX;AAAoBS,IAAAA,QAApB;AAA8BE,IAAAA,IAA9B;AAAoCI,IAAAA,IAApC;AAA0CE,IAAAA;AAA1C,GAAP;AACD,CAxCD;;GAAMtB,a;UAkBaD,W;;;AAwBnB,eAAeC,aAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst usePagination = (totalPages,  page) => {\r\n    const [firstArr, setFirstArr] = useState([])\r\n  const [lastArr, setLastArr] = useState([])\r\n  \r\n  useEffect(() => {\r\n    const newArr = [...Array(totalPages)].map((_, i) => i + 1)\r\n    if (totalPages < 4) return setFirstArr(newArr)\r\n\r\n    if(totalPages - page >= 4) {\r\n      setFirstArr(newArr.slice(page - 1, page + 2))\r\n      setLastArr(newArr.slice(totalPages - 1))\r\n    } else {\r\n      setFirstArr(newArr.slice(totalPages - 4, totalPages))\r\n      setLastArr([])\r\n    }\r\n  }, [totalPages, page])\r\n\r\n\r\n  const navigate = useNavigate()\r\n  \r\n\r\n  const isActive = (index) => {\r\n    if (index === page) return \"active\"\r\n    return \"\"\r\n  }\r\n\r\n  const prev =  () => {\r\n    const newPage = Math.max(page - 1, 1)\r\n    navigate(`?page=${newPage}`)\r\n  }\r\n\r\n  const next = () => {\r\n    const newPage = Math.min(page + 1, totalPages)\r\n    navigate(`?page=${newPage}`)\r\n  }\r\n\r\n  const jump = (num) => {\r\n    navigate(`?page=${num}`)\r\n  }\r\n  return {firstArr, lastArr, isActive, prev, next, jump}\r\n}\r\n\r\nexport default usePagination"]},"metadata":{},"sourceType":"module"}