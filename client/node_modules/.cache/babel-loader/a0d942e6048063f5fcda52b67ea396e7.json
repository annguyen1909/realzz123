{"ast":null,"code":"import axios from 'axios';\nexport const checkImage = file => {\n  let err = \"\";\n  if (!file) return err = \"File does not exist.\";\n  if (file.size > 1024 * 1024) // 1mb\n    err = \"The largest image size is 1mb.\";\n  if (file.type !== 'image/jpeg' && file.type !== 'image/png') err = \"Image format is incorrect.\";\n  return err;\n};\nexport const imageUpload = async (images, token) => {\n  let imgArr = [];\n\n  for (const item of images) {\n    const formData = new FormData();\n\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n\n    const res = await axios.post('/api/upload', formData, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const data = await res.json();\n    console.log(data);\n  } // return imgArr;\n\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/utils/imgUpload.js"],"names":["axios","checkImage","file","err","size","type","imageUpload","images","token","imgArr","item","formData","FormData","camera","append","res","post","headers","Authorization","data","json","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,MAAIC,GAAG,GAAG,EAAV;AACA,MAAG,CAACD,IAAJ,EAAU,OAAOC,GAAG,GAAG,sBAAb;AAEV,MAAGD,IAAI,CAACE,IAAL,GAAY,OAAO,IAAtB,EAA4B;AAC5BD,IAAAA,GAAG,GAAG,gCAAN;AAEA,MAAGD,IAAI,CAACG,IAAL,KAAc,YAAd,IAA8BH,IAAI,CAACG,IAAL,KAAc,WAA/C,EACAF,GAAG,GAAG,4BAAN;AAEA,SAAOA,GAAP;AACH,CAXM;AAaP,OAAO,MAAMG,WAAW,GAAG,OAAMC,MAAN,EAAcC,KAAd,KAAwB;AAE/C,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,IAAX,IAAmBH,MAAnB,EAA4B;AACxB,UAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,QAAGF,IAAI,CAACG,MAAR,EAAe;AACXF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAI,CAACG,MAA7B;AACH,KAFD,MAEK;AACDF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACH;;AAED,UAAMK,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BL,QAA1B,EAAoC;AAClDM,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEV;AAAhB;AADyC,KAApC,CAAlB;AAIA,UAAMW,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAlB8C,CAmB/C;;AACH,CApBM","sourcesContent":["import axios from 'axios'\r\n\r\nexport const checkImage = (file) => {\r\n    let err = \"\"\r\n    if(!file) return err = \"File does not exist.\"\r\n\r\n    if(file.size > 1024 * 1024) // 1mb\r\n    err = \"The largest image size is 1mb.\"\r\n\r\n    if(file.type !== 'image/jpeg' && file.type !== 'image/png' )\r\n    err = \"Image format is incorrect.\"\r\n    \r\n    return err;\r\n}\r\n\r\nexport const imageUpload = async(images, token) => {\r\n   \r\n    let imgArr = [];\r\n    for (const item of images)  {\r\n        const formData = new FormData()\r\n\r\n        if(item.camera){\r\n            formData.append(\"file\", item.camera)\r\n        }else{\r\n            formData.append(\"file\", item)\r\n        }\r\n        \r\n        const res = await axios.post('/api/upload', formData, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        const data = await res.json()\r\n        console.log(data)\r\n    }\r\n    // return imgArr;\r\n}"]},"metadata":{},"sourceType":"module"}