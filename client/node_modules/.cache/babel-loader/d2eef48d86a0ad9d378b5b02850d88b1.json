{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Browse\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    totalPages,\n    page,\n    setPage\n  } = _ref;\n  const navigate = useNavigate();\n  const newArr = [...Array(totalPages)].map((_, i) => i + 1);\n\n  const isActive = index => {\n    if (index === page) return \"active\";\n    return \"\";\n  };\n\n  const prev = () => {\n    const newPage = Math.max(page - 1, 1);\n    setPage(newPage);\n    navigate(`?page=${newPage}`);\n  };\n\n  const next = () => {\n    const newPage = Math.min(page + 1, totalPages);\n    setPage(newPage);\n    navigate(`?page=${newPage}`);\n  };\n\n  const jump = e => {\n    setPage(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination_prev\",\n      onClick: prev // disabled={page === 1}\n      ,\n      children: \"\\xAB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), newArr.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${isActive(num)}`,\n      onClick: () => jump(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pagination_next\",\n      onClick: next // disabled={page === total}\n      ,\n      children: \"\\xBB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Browse/Pagination.jsx"],"names":["React","useNavigate","Pagination","totalPages","page","setPage","navigate","newArr","Array","map","_","i","isActive","index","prev","newPage","Math","max","next","min","jump","e","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,UAAU,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAACC,IAAAA,UAAD;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,GAAgC;AAClD,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAG,CAAC,GAAGC,KAAK,CAACL,UAAD,CAAT,EAAuBM,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAAzC,CAAf;;AAEA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIA,KAAK,KAAKT,IAAd,EAAoB,OAAO,QAAP;AACpB,WAAO,EAAP;AACD,GAHD;;AAKA,QAAMU,IAAI,GAAI,MAAM;AAClB,UAAMC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASb,IAAI,GAAG,CAAhB,EAAmB,CAAnB,CAAhB;AACAC,IAAAA,OAAO,CAACU,OAAD,CAAP;AACAT,IAAAA,QAAQ,CAAE,SAAQS,OAAQ,EAAlB,CAAR;AACD,GAJD;;AAMA,QAAMG,IAAI,GAAG,MAAM;AACjB,UAAMH,OAAO,GAAGC,IAAI,CAACG,GAAL,CAASf,IAAI,GAAG,CAAhB,EAAmBD,UAAnB,CAAhB;AACAE,IAAAA,OAAO,CAACU,OAAD,CAAP;AACAT,IAAAA,QAAQ,CAAE,SAAQS,OAAQ,EAAlB,CAAR;AACD,GAJD;;AAMA,QAAMK,IAAI,GAAIC,CAAD,IAAO;AAClBhB,IAAAA,OAAO,CAACgB,CAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AACA,MAAA,OAAO,EAAEP,IADT,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMIP,MAAM,CAACE,GAAP,CAAWa,GAAG,iBACZ;AACA,MAAA,SAAS,EAAG,GAAEV,QAAQ,CAACU,GAAD,CAAM,EAD5B;AAEA,MAAA,OAAO,EAAE,MAAMF,IAAI,CAACE,GAAD,CAFnB;AAAA,gBAIGA;AAJH,OAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,YADF,CANJ,eAeE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AACA,MAAA,OAAO,EAAEJ,IADT,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAhDD;;GAAMhB,U;UACaD,W;;;KADbC,U;AAmDN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Pagination = ({totalPages, page, setPage}) => {\r\n  const navigate = useNavigate()\r\n  const newArr = [...Array(totalPages)].map((_, i) => i + 1)\r\n\r\n  const isActive = (index) => {\r\n    if (index === page) return \"active\"\r\n    return \"\"\r\n  }\r\n\r\n  const prev =  () => {\r\n    const newPage = Math.max(page - 1, 1)\r\n    setPage(newPage)\r\n    navigate(`?page=${newPage}`)\r\n  }\r\n\r\n  const next = () => {\r\n    const newPage = Math.min(page + 1, totalPages)\r\n    setPage(newPage)\r\n    navigate(`?page=${newPage}`)\r\n  }\r\n\r\n  const jump = (e) => {\r\n    setPage(e)\r\n  }\r\n\r\n  return(\r\n    <div className=\"pagination\">\r\n      <button className=\"pagination_prev\"\r\n      onClick={prev}\r\n      // disabled={page === 1}\r\n      >&laquo;</button>\r\n      {\r\n        newArr.map(num => (\r\n          <button key={num} \r\n          className={`${isActive(num)}`}\r\n          onClick={() => jump(num)}\r\n          >\r\n            {num}\r\n          </button>\r\n        ))\r\n      }\r\n      <button className=\"pagination_next\"\r\n      onClick={next}\r\n      // disabled={page === total}\r\n      >&raquo;</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}