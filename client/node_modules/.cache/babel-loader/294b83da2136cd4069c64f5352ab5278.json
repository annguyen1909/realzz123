{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Header\\\\Menu.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport { logout } from '../../redux/actions/authAction';\nimport Avatar from '../Avatar'; // Import icons\n\nimport { FaHome, FaCompass, FaBell } from 'react-icons/fa';\nimport { AiFillMessage, AiOutlinePlus } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = () => {\n  _s();\n\n  const bfLoginLink = [{\n    label: 'Login',\n    icon: \"\",\n    path: '/login'\n  }, {\n    label: 'Register',\n    icon: \"\",\n    path: '/register'\n  }];\n  const afLoginLinks = [{\n    label: 'Home',\n    path: '/home'\n  }, {\n    label: 'Browse',\n    path: '/browse'\n  }, {\n    label: 'Notification',\n    path: '/notify'\n  }, {\n    label: 'Message',\n    path: '/message'\n  }, {\n    label: 'Create Post',\n    path: '/createpost'\n  }];\n  const {\n    auth,\n    theme\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    pathName\n  } = useLocation();\n\n  const isActive = pn => {\n    if (pn === pathName) return 'active';\n  };\n\n  const navLinks = auth.token ? afLoginLinks : bfLoginLink;\n  const icons = [FaHome, FaCompass, FaBell, AiFillMessage, AiOutlinePlus];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"navbar-nav flex-row bg-light\",\n      children: [auth.token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: navLinks.map((link, index) => {\n          const Icon = icons[index];\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `nav-item px-2 ${isActive(link.path)}`,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: link.path,\n              children: link.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: navLinks.map((link, index) => {\n          const Icon = icons[index];\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `nav-item px-2 ${isActive(link.path)}`,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: link.path,\n              children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), auth.user && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-link dropdown-toggle\",\n          id: \"navbarDropdown\",\n          role: \"button\",\n          \"data-bs-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": \"false\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: auth.user.avatar,\n            size: \"medium-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu avatar-menu\",\n          \"aria-labelledby\": \"navbarDropdown\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"dropdown-item\",\n            to: `/profile/${auth.user._id}`,\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"theme\",\n            className: \"dropdown-item\",\n            onClick: () => dispatch({\n              type: GLOBALTYPES.THEME,\n              payload: !theme\n            }),\n            children: theme ? 'Light Mode' : 'Dark Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"dropdown-divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"dropdown-item\",\n            to: \"/\",\n            onClick: () => dispatch(logout()),\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"7xkTldplCd6UuYiJQhkQyZiRdaE=\", false, function () {\n  return [useSelector, useDispatch, useLocation];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Header/Menu.jsx"],"names":["React","Link","useLocation","useSelector","useDispatch","GLOBALTYPES","logout","Avatar","FaHome","FaCompass","FaBell","AiFillMessage","AiOutlinePlus","Menu","bfLoginLink","label","icon","path","afLoginLinks","auth","theme","state","dispatch","pathName","isActive","pn","navLinks","token","icons","map","link","index","Icon","user","avatar","_id","type","THEME","payload"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { logout } from '../../redux/actions/authAction'\r\n\r\n\r\n\r\nimport Avatar from '../Avatar'\r\n// Import icons\r\nimport \r\n{\r\n    FaHome,\r\n    FaCompass,\r\n    FaBell\r\n} from 'react-icons/fa'\r\nimport {\r\n    AiFillMessage,\r\n    AiOutlinePlus\r\n} from 'react-icons/ai'\r\n\r\nconst Menu = () => {\r\n    const bfLoginLink = [\r\n        {label: 'Login', icon: \"\", path: '/login'},\r\n        {label: 'Register', icon: \"\", path: '/register'}\r\n    ]\r\n\r\n    const afLoginLinks = [\r\n        {label: 'Home', path: '/home'},\r\n        {label: 'Browse', path: '/browse'},\r\n        {label: 'Notification',  path: '/notify'},\r\n        {label: 'Message', path: '/message'},\r\n        {label: 'Create Post', path: '/createpost'}\r\n    ]\r\n\r\n    const { auth, theme } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const { pathName } = useLocation()\r\n\r\n    \r\n\r\n    const isActive = (pn) => {\r\n        if(pn === pathName) return 'active'\r\n    }\r\n\r\n    const navLinks = auth.token ? afLoginLinks : bfLoginLink\r\n    \r\n\r\n    const icons  = [\r\n        FaHome, FaCompass, FaBell, AiFillMessage, AiOutlinePlus\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <ul className=\"navbar-nav flex-row bg-light\">\r\n                \r\n                {auth.token ? \r\n                (\r\n                <div>\r\n                    {\r\n                        navLinks.map((link, index) => { \r\n                            const Icon = icons[index]\r\n                            return (\r\n                            <li className={`nav-item px-2 ${isActive(link.path)}`} key={index}>\r\n                                <Link className=\"nav-link\" to={link.path}>\r\n                                    {link.label }\r\n                                </Link>\r\n                            </li>\r\n                        )})\r\n                    }\r\n                </div>\r\n                ) : (\r\n                <div>\r\n                    {\r\n                        navLinks.map((link, index) => { \r\n                            const Icon = icons[index]\r\n                            return (\r\n                            <li className={`nav-item px-2 ${isActive(link.path)}`} key={index}>\r\n                                <Link className=\"nav-link\" to={link.path}>\r\n                                    <Icon />\r\n                                </Link>\r\n                            </li>\r\n                        )})\r\n                    }\r\n                </div>\r\n                )}\r\n                \r\n\r\n                {auth.user && \r\n                    <li className=\"nav-item dropdown\">\r\n                        <span className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" \r\n                        role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <Avatar src={auth.user.avatar} size=\"medium-avatar\"/>\r\n                        </span>\r\n                        \r\n                        <div className=\"dropdown-menu avatar-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <Link className=\"dropdown-item\" to={`/profile/${auth.user._id}`}>Profile</Link>\r\n\r\n                            <label htmlFor=\"theme\" className=\"dropdown-item\"\r\n                            onClick={() => dispatch({\r\n                                type: GLOBALTYPES.THEME, payload: !theme\r\n                            })}>\r\n                                {theme ? 'Light Mode' : 'Dark Mode'}\r\n                            </label>\r\n\r\n                            <hr className=\"dropdown-divider\"/>\r\n                            <Link className=\"dropdown-item\" to=\"/\"\r\n                            onClick={() => dispatch(logout())}>\r\n                                Log Out\r\n                            </Link>\r\n                        </div>\r\n                    </li>\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu"]},"metadata":{},"sourceType":"module"}