{"ast":null,"code":"import { postDataAPI } from '../../utils/fetchData';\nexport const TYPES = {\n  AUTH: 'AUTH'\n};\nexport const login = data => async dispatch => {\n  try {\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        loading: true\n      }\n    });\n    const res = await postDataAPI('login', data);\n    dispatch({\n      type: 'AUTH',\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstLogin\", true);\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const refreshToken = () => async dispatch => {\n  const firstLogin = localStorage.getItem(\"firstLogin\");\n\n  if (firstLogin) {\n    dispatch({\n      type: 'NOTIFY',\n      payload: {\n        loading: true\n      }\n    });\n\n    try {// const res = await postDataAPI('refresh_token')\n      // console.log(res)\n      // dispatch({\n      //     type: 'AUTH', \n      //     payload: {\n      //         token:  res.data.access_token,\n      //         user: res.data.user\n      //     }\n      // })\n      // dispatch({ type: 'NOTIFY', payload: {} })\n    } catch (err) {\n      dispatch({\n        type: 'NOTIFY',\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/redux/actions/authAction.js"],"names":["postDataAPI","TYPES","AUTH","login","data","dispatch","type","payload","loading","res","token","access_token","user","localStorage","setItem","success","msg","err","error","response","refreshToken","firstLogin","getItem"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAAd;AAIP,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAC/C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AAA3B,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMT,WAAW,CAAC,OAAD,EAAUI,IAAV,CAA7B;AACAC,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,MADD;AAELC,MAAAA,OAAO,EAAG;AACNG,QAAAA,KAAK,EAAGD,GAAG,CAACL,IAAJ,CAASO,YADX;AAENC,QAAAA,IAAI,EAAEH,GAAG,CAACL,IAAJ,CAASQ;AAFT;AAFL,KAAD,CAAR;AAOAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AAEAT,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,OAAO,EAAG;AACNQ,QAAAA,OAAO,EAAEN,GAAG,CAACL,IAAJ,CAASY;AADZ;AAFL,KAAD,CAAR;AAMH,GAlBD,CAmBA,OAAOC,GAAP,EAAY;AACRZ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,OAAO,EAAG;AACNW,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaf,IAAb,CAAkBY;AADnB;AAFL,KAAD,CAAR;AAMH;AACJ,CA5BM;AA8BP,OAAO,MAAMI,YAAY,GAAG,MAAM,MAAOf,QAAP,IAAoB;AAClD,QAAMgB,UAAU,GAAGR,YAAY,CAACS,OAAb,CAAqB,YAArB,CAAnB;;AACA,MAAGD,UAAH,EAAc;AACVhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AAA3B,KAAD,CAAR;;AAEA,QAAI,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAXD,CAWE,OAAOS,GAAP,EAAY;AACVZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,QADD;AAELC,QAAAA,OAAO,EAAG;AACNW,UAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaf,IAAb,CAAkBY;AADnB;AAFL,OAAD,CAAR;AAMH;AACJ;AACJ,CAzBM","sourcesContent":["import { postDataAPI } from '../../utils/fetchData'\r\n\r\nexport const TYPES = {\r\n    AUTH: 'AUTH'\r\n}\r\n\r\nexport const login = (data) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'NOTIFY', payload: {loading: true} })\r\n        const res = await postDataAPI('login', data)\r\n        dispatch({\r\n            type: 'AUTH', \r\n            payload: ({\r\n                token:  res.data.access_token,\r\n                user: res.data.user\r\n            })\r\n        })\r\n        localStorage.setItem(\"firstLogin\", true)\r\n\r\n        dispatch({\r\n            type: 'NOTIFY', \r\n            payload: ({\r\n                success: res.data.msg\r\n            })\r\n        })\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: 'NOTIFY', \r\n            payload: ({\r\n                error: err.response.data.msg\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const refreshToken = () => async (dispatch) => {\r\n    const firstLogin = localStorage.getItem(\"firstLogin\")\r\n    if(firstLogin){\r\n        dispatch({ type: 'NOTIFY', payload: {loading: true} })\r\n\r\n        try {\r\n            // const res = await postDataAPI('refresh_token')\r\n            // console.log(res)\r\n            // dispatch({\r\n            //     type: 'AUTH', \r\n            //     payload: {\r\n            //         token:  res.data.access_token,\r\n            //         user: res.data.user\r\n            //     }\r\n            // })\r\n            // dispatch({ type: 'NOTIFY', payload: {} })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'NOTIFY', \r\n                payload: ({\r\n                    error: err.response.data.msg\r\n                })\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}