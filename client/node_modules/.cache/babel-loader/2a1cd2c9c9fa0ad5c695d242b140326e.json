{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\University\\\\I.T\\\\Year 1\\\\Software Engineering Project Management\\\\Project\\\\real\\\\client\\\\src\\\\components\\\\Alert\\\\Alert.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loading from './Loading';\nimport Toast from './Toast';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = () => {\n  _s();\n\n  const {\n    alert\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [alert.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 31\n    }, this), alert.error && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Error!\",\n        body: alert.error\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {}\n      }),\n      bgColor: \"bg-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), alert.success && /*#__PURE__*/_jsxDEV(Toast, {\n      msg: {\n        title: \"Success!\",\n        body: alert.success\n      },\n      handleShow: () => dispatch({\n        type: GLOBALTYPES.A,\n        payload: {}\n      }),\n      bgColor: \"bg-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Alert, \"nkVCJCUp54Uw4abul0ck9OkzP00=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/University/I.T/Year 1/Software Engineering Project Management/Project/real/client/src/components/Alert/Alert.js"],"names":["React","useSelector","useDispatch","Loading","Toast","GLOBALTYPES","Alert","alert","state","dispatch","loading","error","title","body","type","ALERT","payload","success","A"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,WAAT,QAA4B,iCAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,WAAW,CAACO,KAAK,IAAIA,KAAV,CAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,sBACI;AAAA,eAEKK,KAAK,CAACG,OAAN,iBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFtB,EAIKH,KAAK,CAACI,KAAN,iBACD,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAACC,QAAAA,KAAK,EAAE,QAAR;AAAkBC,QAAAA,IAAI,EAAEN,KAAK,CAACI;AAA9B,OAAZ;AACA,MAAA,UAAU,EAAE,MAAMF,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAET,WAAW,CAACU,KAAnB;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAD1B;AAEA,MAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YALJ,EASKT,KAAK,CAACU,OAAN,iBACD,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAACL,QAAAA,KAAK,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEN,KAAK,CAACU;AAAhC,OAAZ;AACA,MAAA,UAAU,EAAE,MAAMR,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAET,WAAW,CAACa,CAAnB;AAAsBF,QAAAA,OAAO,EAAE;AAA/B,OAAD,CAD1B;AAEA,MAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnBD;;GAAMV,K;UACgBL,W,EACDC,W;;;KAFfI,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Loading from './Loading'\r\nimport Toast from './Toast'\r\n\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\n\r\nconst Alert = () => {\r\n    const { alert } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div>\r\n            \r\n            {alert.loading && <Loading />}\r\n\r\n            {alert.error && \r\n            <Toast msg={{title: \"Error!\", body: alert.error}}\r\n            handleShow={() => dispatch({type: GLOBALTYPES.ALERT, payload: {}})}\r\n            bgColor=\"bg-danger\" />}\r\n\r\n            {alert.success && \r\n            <Toast msg={{title: \"Success!\", body: alert.success}}\r\n            handleShow={() => dispatch({type: GLOBALTYPES.A, payload: {}})}\r\n            bgColor=\"bg-success\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert"]},"metadata":{},"sourceType":"module"}